namespace = disasters_inv

disasters_inv.1 = { #flood in flood_plain
	type = country_event
	title = disasters_inv.1.t
	desc = disasters_inv.1.desc
	picture = natural_disaster

	left_portrait = current_ruler
	right_portrait = scope:the_day_after.governor
	goto_location = scope:the_day_after

	trigger = {
		any_owned_province = {
			terrain = flood_plain
		}
		NOT = {
			has_variable = floods_cooldown
		}
	}

	immediate = {
		random_owned_province = {
			limit = {
				terrain = flood_plain
				total_population >= 4
			}
			save_scope_as = the_day_after
			set_variable = {
				name = num_of_victims
				days = 3
				value = total_population
			}
			add_province_modifier = {
				name = flood_initial_damage
				duration = 730
			}
			random_pops_in_province = {
				while = {
					count = {
						value = var:num_of_victims
						multiply = 0.25
					}
					kill_pop = yes
				}
			}
			custom_tooltip = disasters_inv_destroyed_building
			hidden_effect = {
				random_list = {
					1 = {
						trigger = { has_building = commerce_building }
						remove_building_level = commerce_building
					}
					1 = {
						trigger = { has_building = library_building }
						remove_building_level = library_building
					}
					1 = {
						trigger = { has_building = theathre_building }
						remove_building_level = theathre_building
					}
					1 = {
						trigger = { has_building = academy_building }
						remove_building_level = academy_building
					}
					1 = {
						trigger = { has_building = population_building } # granary
						remove_building_level = population_building
					}
					1 = {
						trigger = { has_building = forum_building }
						remove_building_level = forum_building
					}
					1 = {
						trigger = { has_building = workshop_building }
						remove_building_level = workshop_building
					}
					1 = {
						trigger = { has_building = port_building }
						remove_building_level = port_building
					}
					8 = {}
				}
			}
		}
	}

	option = { #secure the area
		name = disasters_inv.1.a
		current_ruler = {
			add_popularity = 5
		}
		add_treasury = {
			subtract = has_monthly_income
			multiply = 6
		}
		trigger_event = {
			id = disasters_inv.3
			days = { 10 20 }
		}
	}

	option = { #greedy bastard
		name = disasters_inv.1.b
		hidden_effect = {
			if = {
				limit = {
					scope:the_day_after = {
						any_neighbor_province = {
							exists = owner
							owner = root
							OR = {
								terrain = flood_plain
								terrain = farmland
								terrain = plains
							}
						}
					}
				}
				random = {
					chance = 50
					trigger_event = {
						id = disasters_inv.2
						days = { 1 7 }
					}
				}
			}
		}
	}

	after = {
		set_variable = {
			name = floods_cooldown
			days = 9125 #25yrs
		}
	}
}

disasters_inv.2 = { #spread of the flood
	type = country_event
	title = disasters_inv.2.t
	desc = disasters_inv.2.desc
	picture = natural_disaster

	left_portrait = current_ruler
	right_portrait = scope:the_day_after.governor
	goto_location = scope:the_day_after

	immediate = {
		if = {
			limit = {
				scope:the_day_after = {
					any_neighbor_province = {
						exists = owner
						owner = root
						OR = {
							terrain = flood_plain
							terrain = farmland
							terrain = plains
						}
					}
				}
			}
			scope:the_day_after = {
				every_neighbor_province = {
					add_province_modifier = {
						name = flood_reduced_damage
						duration = 365
					}
					hidden_effect = {
						random_list = {
							1 = {
								trigger = { has_building = commerce_building }
								remove_building_level = commerce_building
							}
							1 = {
								trigger = { has_building = library_building }
								remove_building_level = library_building
							}
							1 = {
								trigger = { has_building = theathre_building }
								remove_building_level = theathre_building
							}
							1 = {
								trigger = { has_building = academy_building }
								remove_building_level = academy_building
							}
							1 = {
								trigger = { has_building = population_building } # granary
								remove_building_level = population_building
							}
							1 = {
								trigger = { has_building = forum_building }
								remove_building_level = forum_building
							}
							1 = {
								trigger = { has_building = workshop_building }
								remove_building_level = workshop_building
							}
							1 = {
								trigger = { has_building = port_building }
								remove_building_level = port_building
							}
							8 = {}
						}
					}
				}
			}
		}
	}

	option = {
		name = disasters_inv.2.a
		trigger_event = {
			id = disasters_inv.3
			days = { 1 7 }
		}
	}
}

disasters_inv.3 = { #flood receding
	type = country_event
	title = disasters_inv.3.t
	desc = disasters_inv.3.desc
	picture = natural_disaster

	left_portrait = current_ruler
	right_portrait = scope:the_day_after.governor
	goto_location = scope:the_day_after

	option = {
		name = disasters_inv.3.a
	}
}

disasters_inv.4 = {
	type = country_event
	title = disasters_inv.4.t
	desc = disasters_inv.4.desc
	picture = natural_disaster

	left_portrait = current_ruler
	right_portrait = scope:snowball.governor
	goto_location = scope:snowball

	trigger = {
		any_owned_province = {
			terrain = mountain
		}
		NOT = {
			has_variable = avalanche_cooldown
		}
	}

	immediate = {
		random_owned_province = {
			limit = {
				terrain = mountain
				total_population >= 4
			}
			if = {
				limit = {
					NOT = {
						owner = {
							any_owned_province = {
								this = scope:snowball
							}
						}
					}
				}
				save_scope_as = snowball
			}
			set_variable = {
				name = num_of_victims
				days = 2
				value = total_population
			}
			add_province_modifier = {
				name = hit_by_avalanche
				duration = 730
			}
			random_pops_in_province = {
				while = {
					count = {
						value = var:num_of_victims
						multiply = 0.4
					}
					kill_pop = yes
				}
			}
			if = {
				limit = {
					any_unit_in_province = {
						exists = yes
					}
				}
				every_unit_in_province = {
					damage_unit_percent = 0.06
					damage_unit_morale_percent = 0.12
				}
			}
			custom_tooltip = disasters_inv_destroyed_building
			hidden_effect = {
				random_list = {
					1 = {
						trigger = { has_building = commerce_building }
						remove_building_level = commerce_building
					}
					1 = {
						trigger = { has_building = library_building }
						remove_building_level = library_building
					}
					1 = {
						trigger = { has_building = theathre_building }
						remove_building_level = theathre_building
					}
					1 = {
						trigger = { has_building = academy_building }
						remove_building_level = academy_building
					}
					1 = {
						trigger = { has_building = population_building } # granary
						remove_building_level = population_building
					}
					1 = {
						trigger = { has_building = forum_building }
						remove_building_level = forum_building
					}
					1 = {
						trigger = { has_building = workshop_building }
						remove_building_level = workshop_building
					}
					1 = {
						trigger = { has_building = port_building }
						remove_building_level = port_building
					}
					8 = {}
				}
			}
		}
	}

	option = {
		name = disasters_inv.4.a
	}

	after = {
		if = {
			limit = {
				scope:snowball = {
					any_neighbor_province = {
						terrain = mountain
						NOT = {
							has_province_modifier = hit_by_avalanche
						}
					}
				}
			}
			scope:snowball = {
				clear_saved_scope = snowball
				random_neighbor_province = {
					limit = {
						terrain = mountain
						NOT = {
							has_province_modifier = hit_by_avalanche
						}
					}
					random = {
						chance = 50
						save_scope_as = snowball
						owner = {
							trigger_event = {
								id = disasters_inv.4
								days = { 3 5 }
							}
						}
					}
				}
			}
		}
		else = {
			set_variable = {
				name = avalanche_cooldown
				days = 9125 #25 yrs
			}
		}
	}
}

disasters_inv.5 = { #landslide
	type = country_event
	title = disasters_inv.5.t
	desc = disasters_inv.5.desc
	picture = natural_disaster

	left_portrait = current_ruler
	right_portrait = scope:mudstick.governor
	goto_location = scope:mudstick

	trigger = {
		any_owned_province = {
			terrain = hills
		}
		NOT = {
			has_variable = hills_cooldown
		}
	}

	immediate = {
		random_owned_province = {
			limit = {
				terrain = hills
				total_population >= 4
			}
			save_scope_as = mudstick
			set_variable = {
				name = num_of_victims
				days = 2
				value = total_population
			}
			add_province_modifier = {
				name = the_land_slides_into_your_dms
				duration = 730
			}
			random_pops_in_province = {
				while = {
					count = {
						value = var:num_of_victims
						multiply = 0.15
					}
					kill_pop = yes
				}
			}
			if = {
				limit = {
					any_unit_in_province = {
						exists = yes
					}
				}
				every_unit_in_province = {
					damage_unit_percent = 0.06
					damage_unit_morale_percent = 0.12
				}
			}
			custom_tooltip = disasters_inv_destroyed_building
			hidden_effect = {
				random_list = {
					1 = {
						trigger = { has_building = commerce_building }
						remove_building_level = commerce_building
					}
					1 = {
						trigger = { has_building = library_building }
						remove_building_level = library_building
					}
					1 = {
						trigger = { has_building = theathre_building }
						remove_building_level = theathre_building
					}
					1 = {
						trigger = { has_building = academy_building }
						remove_building_level = academy_building
					}
					1 = {
						trigger = { has_building = population_building } # granary
						remove_building_level = population_building
					}
					1 = {
						trigger = { has_building = forum_building }
						remove_building_level = forum_building
					}
					1 = {
						trigger = { has_building = workshop_building }
						remove_building_level = workshop_building
					}
					1 = {
						trigger = { has_building = port_building }
						remove_building_level = port_building
					}
					8 = {}
				}
			}
		}
	}

	option = { #Prepare for further damage
		name = disasters_inv.5.a
		current_ruler = {
			add_popularity = 5
		}
		add_treasury = {
			subtract = has_monthly_income
			multiply = 6
		}
		set_variable = {
			name = money_money_money
			days = 14
		}
	}

	option = { #Run the risk of further damage
		name = disasters_inv.5.b
		set_variable = {
			name = must_be_funny
			days = 14
			value = 0
		}
	}

	after = {
		trigger_event = {
			id = disasters_inv.6
			days = { 3 10 }
		}
	}
}

disasters_inv.6 = {
	type = country_event
	title = disasters_inv.6.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					has_variable = money_money_money
				}
				desc = disasters_inv.6.desc_1
			}
			triggered_desc = {
				trigger = {
					has_variable = must_be_funny
				}
				desc = disasters_inv.6.desc_2
			}
		}
	}
	picture = natural_disaster

	left_portrait = current_ruler
	right_portrait = scope:mudstick.governor
	goto_location = scope:mudstick

	immediate = {
		if = {
			limit = {
				has_variable = must_be_funny
			}
			random 	= { #Landslide is worse
				chance = 50
				change_variable = {
					add = 1
					name = must_be_funny
				}
			}
			if = {
				limit = {
					var:must_be_funny = 1
				}
				scope:mudstick = {
					reduce_province_rank_effect = yes
					if = {
						limit = {
							is_holy_site = yes
						}
						remove_province_deity = yes
					}
					random_pops_in_province = {
						while = {
							count = {
								value = var:num_of_victims
								multiply = 0.15
							}
							kill_pop = yes
						}
					}
					random_list = {
						1 = {
							trigger = { has_building = commerce_building }
							remove_building_level = commerce_building
						}
						1 = {
							trigger = { has_building = library_building }
							remove_building_level = library_building
						}
						1 = {
							trigger = { has_building = theathre_building }
							remove_building_level = theathre_building
						}
						1 = {
							trigger = { has_building = academy_building }
							remove_building_level = academy_building
						}
						1 = {
							trigger = { has_building = population_building } # granary
							remove_building_level = population_building
						}
						1 = {
							trigger = { has_building = forum_building }
							remove_building_level = forum_building
						}
						1 = {
							trigger = { has_building = workshop_building }
							remove_building_level = workshop_building
						}
						1 = {
							trigger = { has_building = port_building }
							remove_building_level = port_building
						}
					}
				}
			}
			else = {
				scope:mudstick = {
					random_list = {
						1 = {
							trigger = { has_building = commerce_building }
							remove_building_level = commerce_building
						}
						1 = {
							trigger = { has_building = library_building }
							remove_building_level = library_building
						}
						1 = {
							trigger = { has_building = theathre_building }
							remove_building_level = theathre_building
						}
						1 = {
							trigger = { has_building = academy_building }
							remove_building_level = academy_building
						}
						1 = {
							trigger = { has_building = population_building } # granary
							remove_building_level = population_building
						}
						1 = {
							trigger = { has_building = forum_building }
							remove_building_level = forum_building
						}
						1 = {
							trigger = { has_building = workshop_building }
							remove_building_level = workshop_building
						}
						1 = {
							trigger = { has_building = port_building }
							remove_building_level = port_building
						}
						1 = {}
					}
				}
				add_political_influence = -10
			}
		}
	}

	option = { #prepared
		name = disasters_inv.6.a
		trigger = {
			has_variable = money_money_money
		}
		exclusive = yes
	}

	option = { #unprepared
		name = disasters_inv.6.b
		trigger = {
			has_variable = must_be_funny
		}
		exclusive = yes
	}

	after = {
		set_variable = {
			name = hills_cooldown
			days = 9125 #25 yrs
		}
	}
}

disasters_inv.7 = { #drought
	type = country_event
	title = disasters_inv.7.t
	desc = disasters_inv.7.desc
	picture = natural_disaster

	left_portrait = current_ruler
	right_portrait = scope:i_am_thirsty.governor
	goto_location = scope:i_am_thirsty

	trigger = {
		any_country_state = {
			OR = {
				state_monthly_food_income < -2
				has_state_food <= 0
			}
		}
		any_owned_province = {
			OR = {
				terrain = desert
				terrain = desert_hills
			}
		}
		NOT = {
			has_variable = drought_cooldown
		}
	}

	immediate = {
		random_country_state = {
			limit = {
				OR = {
					state_monthly_food_income < -2
					has_state_food <= 0
				}
			}
			save_scope_as = i_am_thirsty
			add_state_modifier = {
				name = grow_a_pear
				duration = 1825 #5 yrs
			}
		}
	}

	option = { #try to save and feed your people
		name = disasters_inv.7.a
		scope:i_am_thirsty = {
			every_neighbor_area = {
				every_area_state = {
					add_state_food = -100
				}
			}
			add_state_food = {
				value = 100
				multiply = 2 #count neighbouring states
			}
		}
		add_treasury = {
			subtract = has_monthly_income 
			multiply = 6
		}
		hidden_effect = {
			if = {
				limit = {
					scope:i_am_thirsty = {
						any_neighbor_area = {
							any_area_state = {
								has_state_food <= 0
							}
						}
					}
				}
				scope:i_am_thirsty = {
					every_neighbor_area = {
						every_area_state = {
							limit = {
								has_state_food <= 0
							}
							add_state_modifier = {
								name = grow_a_pear
								duration = 1825 # 5yrs
							}
						}
					}
				}
			}
		}
	}

	option = { #ignore the area
		name = disasters_inv.7.b
		hidden_effect = {
			trigger_event = {
				id = disasters_inv.8 #drought spreads
				days = { 30 100 }
			}
			scope:i_am_thirsty = {
				every_neighbor_area = {
					every_area_state = {
						limit = {
							owner = root
						}
						add_state_food = -150
					}
				}
			}
		}
	}
}

disasters_inv.8 = {
	type = country_event
	title = disasters_inv.8.t
	desc = disasters_inv.8.desc
	picture = natural_disaster

	left_portrait = current_ruler
	right_portrait = scope:i_am_thirsty.governor
	goto_location = scope:i_am_thirsty

	immediate = {
		scope:i_am_thirsty = {
			every_neighbor_area = {
				every_area_state = {
					add_state_modifier = {
						name = grow_a_pear
						duration = 1825 # 5yrs
					}
				}
			}
		}
	}

	option = { 
		name = disasters_inv.8.a
		random_list = {
			25 = {
				custom_tooltip = disasters_inv_8_a_1
				trigger_event = {
					id = disasters_inv.8
					days = { 30 100 }
				}
			}
			75 = {
				custom_tooltip = disasters_inv_8_a_2
				set_variable = {
					name = drought_cooldown
					days = 9125 #25 yrs
				}
			}
		}
	}

	after = {
		scope:i_am_thirsty = {
			remove_state_modifier = grow_a_pear
			add_state_modifier = {
				name = grow_a_pear
				duration = 3650 #10 yrs
			}
			clear_saved_scope = i_am_thirsty
			random_neighbor_area = {
				random_area_state = {
					limit = {
						has_state_modifier = grow_a_pear
					}
					save_scope_as = i_am_thirsty
				}
			}
		}
	}
}

disasters_inv.9 = { #Seastorm hitting coast - using vanilla events as base for location
	type = country_event
	title = disasters_inv.9.t
	desc = disasters_inv.9.desc
	picture = natural_disaster

	left_portrait = current_ruler
	right_portrait = scope:stormy_daniels.governor
	goto_location = scope:stormy_daniels

	trigger = {
		any_province = {
			OR = {
				has_province_modifier = ravaged_by_storms
				has_province_modifier = stormy_seas
			}
			any_neighbor_province = {
				owner = root
			}
			OR = {
				terrain = coastal_terrain
				terrain = ocean
			}
		}
	}

	immediate = {
		random_province = {
			limit = {
				OR = {
					terrain = coastal_terrain
					terrain = ocean
				}
				OR = {
					has_province_modifier = ravaged_by_storms
					has_province_modifier = stormy_seas
				}
			}
			random_neighbor_province = {
				limit = {
					owner = root
				}
				save_scope_as = stormy_daniels
				set_variable = {
					name = num_of_victims
					days = 2
					value = total_population
				}
				random_pops_in_province = {
					while = {
						count = {
							value = var:num_of_victims
							multiply = 0.05
						}
						kill_pop = yes
					}
				}
				if = {
					limit = {
						has_building = port_building 
					}
					remove_building_level = port_building
				}
				if = {
					limit = {
						any_unit_in_province = {
							exists = yes
						}
					}
					every_unit_in_province = {
						damage_unit_percent = 0.06
						damage_unit_morale_percent = 0.12
					}
				}
			}
			save_scope_as = stormy_mommy
			hidden_effect = {
				every_neighbor_province = {
					limit = {
						OR = {
							terrain = ocean
							terrain = coastal_terrain
						}
						NOT = { has_province_modifier = stormy_seas }
					}
					add_vfx = {
						name = "seastorm"
						duration = 60
					}
					add_province_modifier = {
						name = "stormy_seas"
						duration = 60
					}
				}
				every_neighbor_province = {
					limit = { has_owner = yes }
					add_province_modifier = {
						name = "ravaged_by_storms"
						duration = 60
					}
				}
			}
		}
	}

	option = {
		name = disasters_inv.9.a
	}
}